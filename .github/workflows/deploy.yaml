name: CI/CD - Insight-Agent to Cloud Run

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  id-token: write

env:
  PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  REGION: ${{ vars.GCP_REGION }}
  REPO_ID: insight-agent
  SERVICE_NAME: insight-agent
  # Optional: JSON list, e.g. ["user:you@example.com","serviceAccount:caller@proj.iam.gserviceaccount.com"]
  ALLOWED_INVOKERS: ${{ vars.ALLOWED_INVOKERS }}

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
          pip install flake8

      - name: Lint & Test
        run: |
          flake8 app
          pytest -q

      - name: Google Auth (Workload Identity Federation)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker auth for Artifact Registry
        run: gcloud auth configure-docker ${REGION}-docker.pkg.dev --quiet

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Ensure APIs and Registry exist (targeted apply)
        working-directory: terraform
        env:
          TF_VAR_project_id: ${{ env.PROJECT_ID }}
          TF_VAR_region: ${{ env.REGION }}
        run: |
          terraform apply -auto-approve \
            -var "project_id=${PROJECT_ID}" \
            -var "region=${REGION}" \
            -target=google_project_service.apis \
            -target=google_artifact_registry_repository.repo

      - name: Build & Push image
        id: build
        run: |
          IMAGE_URI="${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_ID}/${SERVICE_NAME}:${GITHUB_SHA}"
          echo "IMAGE_URI=${IMAGE_URI}" >> $GITHUB_OUTPUT
          docker build -t "${IMAGE_URI}" .
          docker push "${IMAGE_URI}"

      - name: Deploy with Terraform (set new image)
        working-directory: terraform
        env:
          TF_VAR_project_id: ${{ env.PROJECT_ID }}
          TF_VAR_region: ${{ env.REGION }}
          TF_VAR_container_image: ${{ steps.build.outputs.IMAGE_URI }}
          TF_VAR_allowed_invokers: ${{ env.ALLOWED_INVOKERS }}
        run: |
          terraform apply -auto-approve \
            -var "project_id=${PROJECT_ID}" \
            -var "region=${REGION}" \
            -var "container_image=${{ steps.build.outputs.IMAGE_URI }}" \
            -var "allowed_invokers=${ALLOWED_INVOKERS}"


